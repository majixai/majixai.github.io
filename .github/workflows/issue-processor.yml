name: Process PDF from Issue

on:
  issues:
    types: [opened]

jobs:
  process-issue:
    runs-on: ubuntu-latest
    # Only run on issues with a specific title format
    if: startsWith(github.event.issue.title, 'PDF Upload:')
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract PDF from issue body
        id: extract_pdf
        run: |
          # The issue body is passed as an environment variable
          BODY="${{ github.event.issue.body }}"

          # Extract the base64 content. This uses sed to find the block between ``` and ```,
          # then removes the markers, and finally removes newlines. It's more portable than awk -P.
          BASE64_CONTENT=$(echo "$BODY" | sed -n '/```/,/```/p' | sed '1d;$d' | tr -d '\n')

          # Extract the filename. This uses grep and sed for portability.
          FILENAME=$(echo "$BODY" | grep -o '\*\*Filename:\*\* `.*`' | sed 's/.*`\(.*\)`/\1/')

          # Check if content and filename were found
          if [ -z "$BASE64_CONTENT" ] || [ -z "$FILENAME" ]; then
            echo "::error::Could not find Base64 content or filename in the issue body. Please ensure the issue was created correctly."
            # Add a comment to the issue to inform the user
            gh issue comment ${{ github.event.issue.number }} --body "❌ **Upload Failed:** Could not parse the PDF data from the issue. Please try uploading the file again."
            exit 1
          fi

          # Set outputs for the next step
          echo "::set-output name=base64_content::$BASE64_CONTENT"
          echo "::set-output name=filename::$FILENAME"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Decode and save PDF
        run: |
          mkdir -p pdf_summarizer_blog/uploads
          echo "${{ steps.extract_pdf.outputs.base64_content }}" | base64 --decode > "pdf_summarizer_blog/uploads/${{ steps.extract_pdf.outputs.filename }}"
          echo "PDF saved to pdf_summarizer_blog/uploads/${{ steps.extract_pdf.outputs.filename }}"

      - name: Commit and push PDF
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add "pdf_summarizer_blog/uploads/${{ steps.extract_pdf.outputs.filename }}"
          git commit -m "Add PDF from issue #${{ github.event.issue.number }}: ${{ steps.extract_pdf.outputs.filename }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Close the issue with a comment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Thank you for your submission! The PDF has been received and is now being processed. This issue will now be closed.'
            });
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            });