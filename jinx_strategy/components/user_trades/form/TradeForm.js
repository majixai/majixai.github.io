import React, { useState } from 'react';
import { saveUserTradeToDB } from '../../../../services/indexedDBService.js';

const TradeForm = () => {
    // Basic state for form inputs - can be expanded later
    const [symbol, setSymbol] = useState('');
    const [date, setDate] = useState('');
    const [quantity, setQuantity] = useState('');
    const [price, setPrice] = useState('');
    const [type, setType] = useState('buy'); // Default to 'buy'
    const [notes, setNotes] = useState(''); // Add state for notes

    const handleSubmit = async (event) => {
        event.preventDefault();
        const trade = {
            symbol,
            date,
            quantity: parseFloat(quantity), // Ensure numeric types
            price: parseFloat(price),       // Ensure numeric types
            type,
            notes // Add notes to the trade object
            // id will be generated by saveUserTradeToDB if not provided
        };
        try {
            const savedTradeId = await saveUserTradeToDB(trade);
            console.log('Trade saved with ID:', savedTradeId);
            alert('Trade saved successfully!');
            // Optionally reset form fields here
            setSymbol('');
            setDate('');
            setQuantity('');
            setPrice('');
            setType('buy');
            setNotes('');
        } catch (error) {
            console.error('Failed to save trade:', error);
            alert('Error saving trade. See console for details.');
        }
    };

    return (
        <div>
            <h2>Trade Entry Form</h2>
            <form onSubmit={handleSubmit}>
                <div>
                    <label htmlFor="symbol">Symbol:</label>
                    <input type="text" id="symbol" value={symbol} onChange={(e) => setSymbol(e.target.value)} required />
                </div>
                <div>
                    <label htmlFor="date">Date:</label>
                    <input type="date" id="date" value={date} onChange={(e) => setDate(e.target.value)} required />
                </div>
                <div>
                    <label htmlFor="quantity">Quantity:</label>
                    <input type="number" id="quantity" value={quantity} onChange={(e) => setQuantity(e.target.value)} required />
                </div>
                <div>
                    <label htmlFor="price">Price:</label>
                    <input type="number" step="0.01" id="price" value={price} onChange={(e) => setPrice(e.target.value)} required />
                </div>
                <div>
                    <label htmlFor="type">Type:</label>
                    <select id="type" value={type} onChange={(e) => setType(e.target.value)}>
                        <option value="buy">Buy</option>
                        <option value="sell">Sell</option>
                    </select>
                </div>
                <div>
                    <label htmlFor="notes">Notes:</label>
                    <textarea id="notes" value={notes} onChange={(e) => setNotes(e.target.value)} />
                </div>
                <button type="submit">Add Trade</button>
            </form>
        </div>
    );
};

export default TradeForm;
